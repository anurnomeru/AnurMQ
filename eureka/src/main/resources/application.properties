eureka.instance.hostname=localhost
server.port=20000
eureka.instance.appname=eureka-server
# 不需要高可用注册中心
eureka.client.register-with-eureka=false
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
# 默认情况下，如果Eureka Server在一定时间内没有接收到某个微服务实例的心跳，
# Eureka Server将会注销该实例（默认90秒）。但是当网络分区故障发生时，
# 微服务与Eureka Server之间无法正常通信，以上行为可能变得非常危险了
# ――因为微服务本身其实是健康的，此时本不应该注销这个微服务。
# Eureka通过“自我保护模式”来解决这个问题――当Eureka Server节点在短时间内丢失过多客户端时（可能发生了网络分区故障），
# 那么这个节点就会进入自我保护模式。一旦进入该模式，Eureka Server就会保护服务注册表中的信息，不再删除服务注册表中的数据
# （也就是不会注销任何微服务）。当网络故障恢复后，该Eureka Server节点会自动退出自我保护模式。
# 配置属性，但由于 Eureka 自我保护模式以及心跳周期长的原因，经常会遇到 Eureka Server 不剔除已关停的节点的问题
eureka.server.enable-self-preservation=false
eureka.server.eviction-interval-timer-in-ms=5000